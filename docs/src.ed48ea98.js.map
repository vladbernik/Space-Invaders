{"version":3,"sources":["src/sprite.js","src/cannon.js","src/bullet.js","src/alien.js","src/input-handler.js","src/game.js","src/index.js"],"names":["Sprite","img","x","y","w","h","Cannon","sprite","_sprite","ctx","time","drawImage","Bullet","vy","color","fillStyle","fillRect","Alien","spriteA","spriteB","_spriteA","_spriteB","sp","Math","ceil","InputHandler","down","pressed","document","addEventListener","e","keyCode","code","assets","sprites","aliens","cannon","bunker","gameState","bullets","inputHandler","preload","onPreloadComplete","Image","src","assetPath","init","canvas","alienTypes","i","len","length","j","alienType","alienX","alienY","push","height","update","stopGame","isDown","isPressed","bulletX","bulletY","forEach","b","draw","getContext","clearRect","width","a","getElementById","window","innerHeight","lastTick","lastRender","stopCycle","tickLength","run","tFrame","requestAnimationFrame","nextTick","numTicks","timeSinceTick","floor","cancelAnimationFrame","performance","now"],"mappings":"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","file":"src.ed48ea98.js","sourceRoot":"..","sourcesContent":["export default class Sprite {\n  constructor(img, x, y, w, h) {\n    this.img = img;\n  \tthis.x = x;\n  \tthis.y = y;\n  \tthis.w = w;\n  \tthis.h = h;\n  }\n}\n","export default class Cannon {\n  constructor(x, y, sprite) {\n    this.x = x;\n  \tthis.y = y;\n    this._sprite = sprite;\n  }\n\n  draw(ctx, time) {\n    ctx.drawImage(\n      this._sprite.img,\n      this._sprite.x, this._sprite.y, this._sprite.w, this._sprite.h,\n      this.x, this.y, this._sprite.w, this._sprite.h\n    );\n  }\n}\n","export default class Bullet {\n  constructor(x, y, vy, w, h, color) {\n    this.x = x;\n  \tthis.y = y;\n  \tthis.vy = vy;\n  \tthis.w = w;\n  \tthis.h = h;\n  \tthis.color = color;\n  }\n\n  update(time) {\n    this.y += this.vy;\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n  \tctx.fillRect(this.x, this.y, this.w, this.h);\n  }\n}\n","export default class Alien {\n  constructor(x, y, [spriteA, spriteB]) {\n    this.x = x;\n  \tthis.y = y;\n    this._spriteA = spriteA;\n    this._spriteB = spriteB;\n  }\n\n  draw(ctx, time) {\n    let sp = (Math.ceil(time / 1000) % 2 === 0) ? this._spriteA : this._spriteB;\n\n    ctx.drawImage(\n      sp.img,\n      sp.x, sp.y, sp.w, sp.h,\n      this.x, this.y, sp.w, sp.h\n    );\n  }\n}\n","export default class InputHandler {\n  constructor() {\n    this.down = {};\n  \tthis.pressed = {};\n  \tdocument.addEventListener(\"keydown\", e => {\n  \t\tthis.down[e.keyCode] = true;\n  \t});\n  \tdocument.addEventListener(\"keyup\", e => {\n  \t\tdelete this.down[e.keyCode];\n  \t\tdelete this.pressed[e.keyCode];\n  \t});\n  }\n\n  /**\n   * Returns whether a key is pressod down\n   * @param  {number} code the keycode to check\n   * @return {bool} the result from check\n   */\n  isDown(code) {\n  \treturn this.down[code];\n  }\n\n  /**\n   * Return wheter a key has been pressed\n   * @param  {number} code the keycode to check\n   * @return {bool} the result from check\n   */\n  isPressed(code) {\n  \t// if key is registred as pressed return false else if\n  \t// key down for first time return true else return false\n  \tif (this.pressed[code]) {\n  \t\treturn false;\n  \t} else if (this.down[code]) {\n  \t\treturn this.pressed[code] = true;\n  \t}\n  \treturn false;\n  }\n}\n","import Sprite from './sprite'\nimport Cannon from './cannon'\nimport Bullet from './bullet'\nimport Alien from './alien'\nimport InputHandler from './input-handler'\n\nimport assetPath from '../assets/invaders.png'\n\nlet assets;\nconst sprites = {\n  aliens: [],\n  cannon: null,\n  bunker: null\n};\nconst gameState = {\n  bullets: [],\n  aliens: [],\n  cannon: null,\n};\nconst inputHandler = new InputHandler();\n\nexport function preload(onPreloadComplete) {\n  assets = new Image();\n\tassets.addEventListener(\"load\", () => {\n    sprites.cannon = new Sprite(assets, 62, 0, 22, 16);\n    sprites.bunker = new Sprite(assets, 84, 8, 36, 24);\n    sprites.aliens = [\n      [new Sprite(assets,  0, 0, 22, 16), new Sprite(assets,  0, 16, 22, 16)],\n\t\t\t[new Sprite(assets, 22, 0, 16, 16), new Sprite(assets, 22, 16, 16, 16)],\n\t\t\t[new Sprite(assets, 38, 0, 24, 16), new Sprite(assets, 38, 16, 24, 16)]\n    ]\n\n    onPreloadComplete();\n  });\n\tassets.src = assetPath;\n}\n\nexport function init(canvas) {\n  const alienTypes = [1, 0, 1, 2, 0, 2];\n\tfor (var i = 0, len = alienTypes.length; i < len; i++) {\n\t\tfor (var j = 0; j < 10; j++) {\n      const alienType = alienTypes[i];\n\n      let alienX = 30 + j*30;\n      let alienY = 30 + i*30;\n\n      if (alienType === 1) {\n        alienX += 3; // (kostyl) aliens of this type is a bit thinner\n      }\n\n\t\t\tgameState.aliens.push(\n        new Alien(alienX, alienY, sprites.aliens[alienType])\n\t\t\t);\n\t\t}\n\t}\n\n  gameState.cannon = new Cannon(\n    100, canvas.height - 100,\n    sprites.cannon\n  );\n}\n\nexport function update(time, stopGame) {\n\tif (inputHandler.isDown(37)) { // Left\n\t\tgameState.cannon.x -= 4;\n\t}\n\n\tif (inputHandler.isDown(39)) { // Right\n\t\tgameState.cannon.x += 4;\n\t}\n\n  if (inputHandler.isPressed(32)) { // Space\n    const bulletX = gameState.cannon.x + 10;\n    const bulletY = gameState.cannon.y;\n\t\tgameState.bullets.push(new Bullet(bulletX, bulletY, -8, 2, 6, \"#fff\"));\n\t}\n\n  gameState.bullets.forEach(b => b.update(time));\n}\n\nexport function draw(canvas, time) {\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  gameState.aliens.forEach(a => a.draw(ctx, time));\n  gameState.cannon.draw(ctx);\n  gameState.bullets.forEach(b => b.draw(ctx));\n}\n","import {\n  preload,\n  init,\n  update,\n  draw\n} from './game'\n\nconst canvas = document.getElementById(\"cnvs\");\ncanvas.width = 600;\ncanvas.height = window.innerHeight;\n\nconst tickLength = 15; //ms\nlet lastTick;\nlet lastRender;\nlet stopCycle;\n\nfunction run(tFrame) {\n    stopCycle = window.requestAnimationFrame(run);\n\n    const nextTick = lastTick + tickLength;\n    let numTicks = 0;\n\n    if (tFrame > nextTick) {\n        const timeSinceTick = tFrame - lastTick;\n        numTicks = Math.floor(timeSinceTick / tickLength);\n    }\n\n    for (let i = 0; i < numTicks; i++) {\n        lastTick = lastTick + tickLength;\n        update(lastTick, stopGame);\n    }\n\n    draw(canvas, tFrame);\n    lastRender = tFrame;\n}\n\nfunction stopGame() {\n    window.cancelAnimationFrame(stopCycle);\n}\n\nfunction onPreloadComplete() {\n  lastTick = performance.now();\n  lastRender = lastTick;\n  stopCycle = null;\n  init(canvas);\n  run();\n}\n\npreload(onPreloadComplete);\n"]}